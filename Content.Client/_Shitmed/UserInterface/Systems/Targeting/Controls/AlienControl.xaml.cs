using System.Numerics;
using Content.Shared._Shitmed.Targeting;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._Shitmed.UserInterface.Systems.Targeting.Controls;

[GenerateTypedNameReferences]
public sealed partial class AlienControl : TextureRect
{
    public Dictionary<TargetBodyPart, Texture?>? BodyPartTexturesHovered;
    public Texture? TextureHovered;
    public Texture? TextureFocused;

    public float DrawScale = 2; // By default it should be 2

    public AlienControl()
    {
        RobustXamlLoader.Load(this);
    }
    protected override void Draw(DrawingHandleScreen handle)
    {
        base.Draw(handle);

        // Draw hovered
        if (TextureHovered != null)
            DrawTexture(handle, TextureHovered);

        // Draw hovered
        if (TextureFocused != null)
            DrawTexture(handle, TextureFocused);
    }

    public void DrawTexture(DrawingHandleScreen handle, Texture tex, Color? color = null)
    {
        var texSize = new Vector2((tex.Width * DrawScale) * UIScale, (tex.Height * DrawScale) * UIScale);
        var offset = Vector2.Zero;

        handle.DrawTextureRect(tex, new UIBox2(Vector2.Zero - offset, texSize - offset), color);
    }
}
